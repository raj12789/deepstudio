package in.deepstudio.framingcentre.domain;
// default package
// Generated Oct 27, 2014 11:32:10 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * FrameInfo generated by hbm2java
 */
@Entity
@Table(name = "frame_info", uniqueConstraints = @UniqueConstraint(columnNames = "frame_type"),schema="public")
public class FrameInfo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6408769723474905519L;
	private Long frameInfoId;
	private String frameType;
	private String frameDesc;
	private String frameTypePhoto;
	private Date createdDate;
	private Date updatedDate;
	private String ipAddress;
	private Set<FrameDetails> frameDetails = new HashSet<>(0);

	public FrameInfo() {
	}

	public FrameInfo(String frameType, String frameDesc, String frameTypePhoto,
			Date createdDate, Date updatedDate, String ipAddress) {
		this.frameType = frameType;
		this.frameDesc = frameDesc;
		this.frameTypePhoto = frameTypePhoto;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.ipAddress = ipAddress;
	}

	public FrameInfo(String frameType, String frameDesc, String frameTypePhoto,
			Date createdDate, Date updatedDate, String ipAddress,
			Set<FrameDetails> frameDetails) {
		this.frameType = frameType;
		this.frameDesc = frameDesc;
		this.frameTypePhoto = frameTypePhoto;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.ipAddress = ipAddress;
		this.frameDetails = frameDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "frame_info_id", unique = true, nullable = false)
	public Long getFrameInfoId() {
		return this.frameInfoId;
	}

	public void setFrameInfoId(Long frameInfoId) {
		this.frameInfoId = frameInfoId;
	}

	@Column(name = "frame_type", unique = true, nullable = false, length = 100)
	public String getFrameType() {
		return this.frameType;
	}

	public void setFrameType(String frameType) {
		this.frameType = frameType;
	}

	@Column(name = "frame_desc", length = 200)
	public String getFrameDesc() {
		return this.frameDesc;
	}

	public void setFrameDesc(String frameDesc) {
		this.frameDesc = frameDesc;
	}

	@Column(name = "frame_type_photo", length = 500)
	public String getFrameTypePhoto() {
		return this.frameTypePhoto;
	}

	public void setFrameTypePhoto(String frameTypePhoto) {
		this.frameTypePhoto = frameTypePhoto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "ip_address", nullable = false, length = 25)
	public String getIpAddress() {
		return this.ipAddress;
	}

	public void setIpAddress(String ipAddress) {
		this.ipAddress = ipAddress;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "frameInfo")
	public Set<FrameDetails> getFrameDetails() {
		return this.frameDetails;
	}

	public void setFrameDetails(Set<FrameDetails> frameDetails) {
		this.frameDetails = frameDetails;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("FrameInfo [frameInfoId=");
		builder.append(frameInfoId);
		builder.append(", frameType=");
		builder.append(frameType);
		builder.append(", frameDesc=");
		builder.append(frameDesc);
		builder.append(", frameTypePhoto=");
		builder.append(frameTypePhoto);
		builder.append(", createdDate=");
		builder.append(createdDate);
		builder.append(", updatedDate=");
		builder.append(updatedDate);
		builder.append(", ipAddress=");
		builder.append(ipAddress);
		builder.append(", frameDetails=");
		builder.append(frameDetails);
		builder.append("]");
		return builder.toString();
	}

	
}
